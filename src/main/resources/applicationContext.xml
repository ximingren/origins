<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:websocket="http://www.springframework.org/schema/websocket"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-4.3.xsd
                        http://www.springframework.org/schema/tx
		                 http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		                 http://www.springframework.org/schema/cache
                        http://www.springframework.org/schema/cache/spring-cache.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
    <!-- 加载jdbc.properties，使数据池起作用-->
    <context:property-placeholder location="classpath:jdbc.properties" ignore-unresolvable="true"/>
    <!-- 加载redis.properties，使数据池起作用-->
    <context:property-placeholder location="classpath:redis.properties" ignore-unresolvable="true"/>
    <!--启用cache注释-->
    <!-- 配置jdbc数据源-->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}"></property>
        <property name="url" value="${jdbc.url}"></property>
        <property name="username" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
        <property name="initialSize" value="${initialSize}"></property>
        <property name="maxActive" value="${maxActive}"></property>
        <property name="maxIdle" value="${maxIdle}"></property>
        <property name="minIdle" value="${minIdle}"></property>
        <property name="maxWait" value="${maxWait}"></property>
    </bean>
    <!--配置redis配置-->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="minIdle" value="${redis.minIdle}"/>
        <property name="maxIdle" value="${redis.maxIdle}"/>
        <property name="maxWaitMillis" value="${redis.maxWait}"></property>
    </bean>
    <!--指定redis工厂-->
    <bean id="jedisPool" class="redis.clients.jedis.JedisPool" destroy-method="close">
        <constructor-arg name="host" value="${redis.ip}"/>
        <constructor-arg name="password" value="${redis.password}"/>
        <constructor-arg name="port" value="${redis.port}"/>
        <constructor-arg name="poolConfig" ref="jedisPoolConfig"/>
        <constructor-arg name="timeout" value="60000"/>
    </bean>

    <!--配置redis操作类-->
    <bean id="redisCache" class="com.D5.cache.RedisCache"></bean>
    <!-- spring与mybatis的集合-->
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <property name="configLocation" value="classpath:mybatis.xml"></property>
    </bean>
    <!-- websocket中要查找数据，只能配置bean，不能依赖注入service -->
    <bean id="service" class="com.D5.service.impl.DataService"></bean>
    <!-- 自动扫描mapper包 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.D5.mapper"></property>
        <property name="sqlSessionFactoryBeanName" value="sqlSession"></property>
    </bean>
    <!-- 配置事务 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!--  使事务起作用-->
    <tx:annotation-driven transaction-manager="transactionManager"/>
</beans>